/*
 * BST.h
 *
 *  Created on: Jun 1, 2014
 *      Author: misterpink14
 */

#ifndef BST_H_
#define BST_H_

#include "Node.h"
#include "BSTInterface.h"


class BST : public BSTInterface {

private:
	Node* Root;

public:
	BST() : Root(NULL) {}
	virtual ~BST() {}

	//Please note that the class that implements this interface must be made
	//of objects which implement the NodeInterface

	/*
	 * Returns the root node for this tree
	 *
	 * @return the root node for this tree.
	 */
	virtual Node * getRootNode()
	{
		return Root;
	}

	/*
	 * Attempts to add the given int to the BST tree
	 *
	 * @return true if added
	 * @return false if unsuccessful (i.e. the int is already in tree)
	 */
	virtual bool add(int data)
	{
		return true;
	}

	/*
	 * Attempts to remove the given int from the BST tree
	 *
	 * @return true if successfully removed
	 * @return false if remove is unsuccessful(i.e. the int is not in the tree)
	 */
	virtual bool remove(int data)
	{
		return true;
	}

	/*
	 * Removes all nodes from the tree, resulting in an empty tree.
	 */
	virtual void clear()
	{


	}
};




#endif /* BST_H_ */
