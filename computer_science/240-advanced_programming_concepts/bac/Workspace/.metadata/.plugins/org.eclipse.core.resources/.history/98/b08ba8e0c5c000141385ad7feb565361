/**
 * 
 */
package Server.DatabaseAccess.Database;

import java.io.File;
import java.io.IOException;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

import Server.DatabaseAccess.UserDBAccess;
import Shared.Model.User;

/**
 * @author Benjamin Thompson
 *
 */
public class Importer
{
	public Importer() throws ClassNotFoundException, SQLException
	{
		Database.init();
		Database.erase();
	}

	/**
	 * @param args
	 * @throws ParserConfigurationException 
	 * @throws IOException 
	 * @throws SAXException 
	 * @throws SQLException 
	 * @throws ClassNotFoundException 
	 */
	public static void main(String[] args) throws SAXException, IOException, ParserConfigurationException, ClassNotFoundException, SQLException
	{
		new Importer().execute(args[0]);
	}
	
	public void execute(String fileURL) throws SAXException, IOException, ParserConfigurationException
	{
		File f = new File(fileURL);
		System.out.println(f.getPath());
		DocumentBuilder docb = DocumentBuilderFactory.newInstance().newDocumentBuilder();
		Document doc = docb.parse(f);
		
		NodeList userNL = doc.getElementsByTagName("user");
		for (int i = 0; i < userNL.getLength(); i++)
		{
			Element userElm = (Element)nl.item(i);
			
			parseUserXML(userElm);
		}
		
		NodeList projectNL = doc.getElementsByTagName("user");
		for (int i = 0; i < nl.getLength(); i++)
		{
			Element userElm = (Element)nl.item(i);
			
			parseUserXML(userElm);
		}
		
		
//		String str = specificElm.getTestContent();
		
	}
	
	public void parseUserXML(Element userElm)
	{
		String user = userElm.getElementsByTagName("username").item(0).getTextContent();
		String pass = userElm.getElementsByTagName("password").item(0).getTextContent();
		String first = userElm.getElementsByTagName("firstname").item(0).getTextContent();
		String last = userElm.getElementsByTagName("lastname").item(0).getTextContent();
		String email = userElm.getElementsByTagName("email").item(0).getTextContent();
		Integer indexed = Integer.parseInt(userElm.getElementsByTagName("indexedrecords").item(0).getTextContent());
		
		UserDBAccess dba = new UserDBAccess();
		try
		{
			dba.CreateUser(new User(user, pass, first, last, email, indexed));
		} catch (SQLException e)
		{
			// TODO Auto-generated catch block
			e.printStackTrace();
			System.out.println("Failed to add " + user);
		}
	}

}
