package Client.GUI.ImageSupport;

import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.awt.event.ComponentListener;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.URL;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JLayeredPane;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;

import Client.Controller;
import Client.GUI.Entry.FormEntryView;
import Client.GUI.Entry.TableEntryView;

@SuppressWarnings("serial")
public class ImageNavigationView extends JPanel
{
	public JLayeredPane layer;
	public ImageIcon ii;
	public ImageNavigationView()
	{
		super();
		initUI();
	}
	
	private void initUI()
	{
		this.setLayout(new GridLayout());
		this.setBackground(Color.GRAY);
	}
	
	public void insertImage(String imageUrl)
	{
		Background bg = new Background();
		double wScale = (double)Controller.client.getWindow().top.getWidth()/(double)Controller.client.getWindow().top.getHeight();
		double hScale = (double)Controller.client.getWindow().top.getHeight()/(double)Controller.client.getWindow().top.getWidth();
		
		System.out.println(wScale);
		System.out.println(hScale);

//		double wScale = Controller.frame1.component.getWidth()/Controller.frame1.component.getHeight();
//		double hScale = Controller.frame1.component.getHeight()/Controller.frame1.component.getWidth();
		
		double wLocalScale = (double)this.getWidth()/(double)this.getHeight();
		double hLocalScale = (double)this.getHeight()/(double)this.getWidth();
		int width = 0;
		int height = 0;
		if (wScale < wLocalScale)
		{
			//use the width
			width =  this.getWidth();
			height = (int) ( this.getHeight() / hScale);
		}
		else
		{
			//use the height
			width =  (int) (this.getWidth() / hScale);
			height = (int) this.getHeight();
			
		}
//		layer = new JLayeredPane();

		BufferedImage image = null;
		try {
			image = ImageIO.read(new URL(imageUrl));

		} catch (IOException e) {
			e.printStackTrace();
	    }
		
		ii = new ImageIcon(image);
		
//		layer.setBounds(0,0,this.getWidth(), this.getHeight());

		Image newImage = ii.getImage().getScaledInstance(width, height,  java.awt.Image.SCALE_SMOOTH);
		ii.setImage(newImage);
		
		JLabel picLabel = new JLabel(ii);
		
//		this.addComponentListener(new ComponentListener() 
//		{  
//			@Override
//	        public void componentResized(ComponentEvent evt) {
//				double wScale = (double)Controller.client.getWindow().top.getWidth()/(double)Controller.client.getWindow().top.getHeight();
//				double hScale = (double)Controller.client.getWindow().top.getHeight()/(double)Controller.client.getWindow().top.getWidth();
//				
//				System.out.println(wScale);
//				System.out.println(hScale);
//
////				double wScale = Controller.frame1.component.getWidth()/Controller.frame1.component.getHeight();
////				double hScale = Controller.frame1.component.getHeight()/Controller.frame1.component.getWidth();
//				
//				double wLocalScale = (double)getWidth()/(double)getHeight();
//				double hLocalScale = (double)getHeight()/(double)getWidth();
//				int width = 0;
//				int height = 0;
//				if (wScale > wLocalScale)
//				{
//					//use the width
//					width =  getWidth();
//					height = (int) ( getHeight() / hScale);
//				}
//				else
//				{
//					//use the height
//					width =  (int) (getWidth() / wScale);
//					height = (int) getHeight();
//					
//				}
//				
//				Controller.client.getWindow().bottomRight.imageNav.ii.setImage(ii.getImage().getScaledInstance(width, height,  java.awt.Image.SCALE_SMOOTH));
//	        }
//
//			@Override
//			public void componentMoved(ComponentEvent e)
//			{
//				// TODO Auto-generated method stub
//				
//			}
//
//			@Override
//			public void componentShown(ComponentEvent e)
//			{
//				// TODO Auto-generated method stub
//				
//			}
//
//			@Override
//			public void componentHidden(ComponentEvent e)
//			{
//				// TODO Auto-generated method stub
//				
//			}
//	});

//		layer.setLayer(picLabel, Integer.valueOf(1));
//		layer.add(picLabel);
//		add(layer);
		add(picLabel);
		
		revalidate();
		repaint();
		
	}
}
